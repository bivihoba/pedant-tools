#!/usr/bin/python

import __init__,os,sys,uuid,glob,argparse,re,json,atexit,time

# cmd_folder = os.path.realpath( __file__ + '/../../lib/python/' )
# if cmd_folder not in sys.path:
# 	sys.path.insert(0, cmd_folder)

from pedant.screenshots.Application import Application 

#parse arguments
parser = argparse.ArgumentParser()
parser.add_argument( "-m", "--mode", type=str , help="Pedant working mode from config", default='full')
parser.add_argument( "-log", "--logging", type=bool , help="Need write log?", default=False)
args = parser.parse_args()

app = Application()
config = app.check_config( app.get_project_config( os.getcwd() ), ignore_urls=True )
if config.has_key('error'):
	print "You config is broken :( Errors:"
	print config['error']
	print "Current config is: "
	print config
	exit(0)

if not config['modes'].has_key( args.mode ):
	print ">Error: Mode <" + args.mode + "> is not found in project configuration. Exit"
	exit(1)

if len( config['modes'][args.mode] ) < 1:
	print ">Error: Browsers not found in "+ args.mode +" mode. Exit"
	exit(1)

#where pedant save\search all results
config[ 'data_storage_root' ] = os.path.realpath( sys.argv[0] + os.sep + '/'+ os.sep +'..'+ os.sep +'..'+ os.sep +'web'+ os.sep +'data_storage' ) + os.sep + config['prj_name']
#sources to be checked
config[ 'urls' ] = app.find_sources_in_directory( os.getcwd(), ("*.html","*.htm") ,config[ 'url_mask' ], config['prj_name'] )
config['logging'] = args.logging

if len( config[ 'urls' ] ) < 1:
	print 'Pedant not found items for checking in current folder and in config'
	sys.exit(0)

#configure
app.configure( config, args.mode )

#create symbolic link to config, urls and handlers
app.create_symlinks( os.getcwd() )

if ( not app.lock() ):
	lock_path = config['data_storage_root'] + os.sep + 'lock.file'
	print ">Error: Your project is locked. Kill all pedant-screens processes and remove file:"+ lock_path +" for continue"
	exit(0)
atexit.register( app.unlock )
app.start()